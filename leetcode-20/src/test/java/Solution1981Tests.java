import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

public class Solution1981Tests {
    private final Solution1981 solution1981 = new Solution1981();

    @Test
    public void example1() {
        int[][] mat = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}};
        int target = 13;
        int expected = 0;
        Assertions.assertEquals(expected, solution1981.minimizeTheDifference(mat, target));
    }

    @Test
    public void example2() {
        int[][] mat = {{1}, {2}, {3}};
        int target = 100;
        int expected = 94;
        Assertions.assertEquals(expected, solution1981.minimizeTheDifference(mat, target));
    }

    @Test
    public void example3() {
        int[][] mat = {{1, 2, 9, 8, 7}};
        int target = 6;
        int expected = 1;
        Assertions.assertEquals(expected, solution1981.minimizeTheDifference(mat, target));
    }

    // 补充用例
    @Test
    public void example4() {
        int[][] mat = {{3, 5}, {5, 10}};
        int target = 47;
        int expected = 32;
        Assertions.assertEquals(expected, solution1981.minimizeTheDifference(mat, target));
    }

    @Test
    public void example5() {
        int[][] mat = {{10, 3, 7, 7, 9, 6, 9, 8, 9, 5}, {1, 1, 6, 8, 6, 7, 7, 9, 3, 9}, {3, 4, 4, 1, 3, 6, 3, 3, 9, 9}, {6, 9, 9, 3, 8, 7, 9, 6, 10, 6}};
        int target = 5;
        int expected = 3;
        Assertions.assertEquals(expected, solution1981.minimizeTheDifference(mat, target));
    }

    @Test
    public void example6() {
        int[][] mat = {{70, 1, 1, 1, 1, 70, 70, 70, 1, 1, 70, 70, 70, 1, 1, 1, 1, 70, 1, 70, 1, 1, 70, 70, 70, 1, 70, 1, 70, 70, 1, 1, 1, 70, 1, 70, 70, 1, 1, 70, 2, 1, 70, 70, 1, 1, 1, 70, 1, 1, 1, 70, 70, 1, 1}, {70, 70, 70, 1, 1, 1, 2, 70, 70, 1, 1, 70, 70, 1, 1, 70, 70, 70, 1, 70, 70, 1, 70, 1, 70, 70, 1, 70, 70, 70, 1, 70, 1, 70, 70, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 70, 1, 70, 1, 70, 70}, {70, 1, 1, 1, 70, 1, 1, 1, 70, 70, 1, 1, 70, 1, 70, 1, 70, 1, 1, 70, 70, 1, 70, 1, 1, 1, 70, 70, 1, 1, 70, 1, 70, 70, 1, 1, 70, 1, 1, 1, 70, 70, 1, 1, 1, 1, 1, 70, 1, 70, 70, 2, 1, 1, 1}, {70, 70, 1, 1, 1, 1, 70, 70, 1, 70, 1, 1, 70, 70, 1, 70, 70, 70, 70, 1, 1, 70, 70, 70, 2, 1, 70, 70, 1, 1, 1, 70, 70, 70, 70, 70, 1, 1, 70, 70, 70, 70, 70, 70, 1, 1, 1, 1, 1, 1, 1, 1, 1, 70, 70}, {70, 1, 1, 1, 70, 2, 1, 70, 70, 1, 70, 1, 1, 1, 70, 1, 70, 1, 1, 70, 1, 1, 1, 70, 70, 70, 70, 70, 1, 1, 1, 1, 1, 70, 70, 1, 70, 1, 1, 70, 70, 1, 1, 70, 70, 70, 1, 1, 70, 70, 70, 70, 1, 1, 70}, {70, 70, 70, 1, 1, 1, 70, 70, 1, 1, 70, 70, 70, 1, 70, 1, 1, 70, 70, 70, 1, 70, 70, 70, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 70, 1, 1, 70, 1, 70, 1, 1, 1, 70, 1, 70, 70, 1, 70, 70, 70, 70, 1, 1, 70}, {70, 70, 70, 70, 70, 1, 1, 1, 1, 70, 1, 70, 70, 70, 70, 1, 1, 70, 70, 1, 70, 70, 1, 70, 70, 70, 70, 1, 1, 70, 70, 70, 70, 70, 2, 70, 1, 70, 1, 70, 70, 70, 1, 70, 70, 1, 70, 70, 70, 1, 70, 70, 70, 70, 70}, {1, 1, 1, 70, 1, 1, 1, 1, 70, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 70, 70, 70, 1, 70, 70, 1, 70, 1, 1, 1, 70, 70, 1, 1, 1, 70, 70, 1, 70, 1, 1, 70, 70, 1, 70, 70, 70, 1, 70, 1, 70, 70, 1}, {70, 70, 70, 1, 1, 70, 1, 1, 1, 1, 1, 1, 1, 70, 70, 1, 1, 1, 1, 70, 1, 1, 1, 70, 1, 70, 70, 70, 70, 70, 1, 70, 2, 1, 70, 70, 70, 1, 1, 1, 70, 70, 1, 1, 1, 70, 1, 70, 1, 70, 70, 1, 70, 70, 70}, {70, 1, 70, 1, 1, 70, 1, 70, 1, 1, 70, 1, 70, 70, 1, 70, 70, 70, 1, 1, 1, 1, 1, 70, 70, 1, 70, 70, 1, 1, 1, 1, 1, 1, 70, 1, 70, 1, 70, 70, 1, 2, 70, 1, 70, 1, 1, 1, 70, 70, 1, 70, 1, 1, 70}, {70, 1, 1, 70, 1, 70, 1, 1, 1, 2, 1, 70, 70, 70, 70, 1, 1, 1, 70, 1, 70, 1, 70, 1, 70, 1, 1, 70, 70, 1, 1, 70, 1, 70, 70, 70, 70, 1, 1, 70, 70, 70, 1, 70, 70, 70, 70, 70, 70, 1, 70, 70, 70, 70, 1}, {70, 70, 70, 1, 70, 1, 1, 70, 70, 1, 1, 1, 1, 1, 2, 70, 1, 70, 70, 70, 1, 70, 70, 70, 70, 70, 1, 70, 1, 70, 70, 70, 70, 70, 1, 1, 70, 70, 1, 1, 1, 1, 70, 70, 1, 70, 1, 70, 1, 1, 70, 70, 1, 1, 70}, {1, 1, 1, 1, 70, 1, 70, 1, 70, 2, 70, 70, 70, 1, 70, 1, 1, 1, 70, 1, 1, 70, 70, 70, 70, 70, 70, 70, 1, 1, 70, 1, 1, 1, 1, 70, 1, 1, 1, 1, 1, 1, 1, 70, 70, 70, 1, 1, 1, 70, 1, 1, 1, 1, 70}, {1, 1, 70, 70, 1, 1, 1, 2, 70, 70, 1, 70, 1, 1, 1, 1, 1, 70, 1, 70, 70, 1, 70, 70, 70, 70, 1, 70, 70, 70, 1, 70, 70, 1, 1, 1, 1, 70, 70, 1, 70, 70, 1, 70, 70, 70, 1, 1, 70, 70, 70, 1, 1, 70, 1}, {1, 1, 70, 1, 1, 1, 1, 1, 1, 1, 70, 70, 1, 1, 70, 70, 70, 1, 1, 70, 70, 1, 70, 70, 1, 70, 1, 1, 70, 70, 1, 1, 1, 1, 2, 1, 70, 1, 1, 70, 1, 1, 1, 70, 1, 1, 70, 70, 70, 70, 1, 1, 1, 70, 70}, {70, 70, 70, 70, 70, 70, 70, 1, 1, 2, 1, 1, 1, 1, 1, 1, 70, 1, 1, 1, 1, 1, 1, 70, 1, 70, 70, 1, 1, 70, 70, 70, 70, 70, 70, 1, 70, 70, 1, 1, 1, 70, 1, 70, 1, 70, 1, 70, 70, 70, 70, 1, 1, 1, 70}, {1, 1, 2, 1, 70, 1, 70, 1, 1, 1, 70, 1, 70, 70, 1, 1, 1, 1, 1, 70, 1, 70, 1, 1, 1, 1, 70, 1, 1, 1, 1, 70, 1, 70, 70, 70, 70, 1, 1, 1, 1, 1, 1, 70, 70, 70, 1, 1, 1, 1, 70, 70, 1, 70, 70}, {1, 1, 70, 70, 1, 1, 1, 70, 70, 1, 70, 70, 1, 1, 70, 1, 1, 1, 1, 1, 1, 70, 1, 70, 70, 70, 70, 70, 1, 1, 1, 1, 70, 70, 70, 70, 2, 70, 1, 1, 1, 1, 1, 1, 1, 70, 70, 70, 1, 70, 1, 1, 70, 70, 70}, {70, 1, 1, 1, 1, 70, 1, 1, 70, 1, 1, 70, 1, 70, 1, 70, 1, 70, 70, 70, 1, 70, 70, 1, 1, 70, 1, 70, 1, 70, 70, 70, 1, 1, 1, 1, 1, 1, 70, 1, 1, 2, 1, 1, 70, 70, 70, 70, 1, 1, 70, 70, 1, 70, 70}, {70, 70, 70, 70, 70, 70, 1, 1, 1, 1, 1, 70, 1, 70, 70, 70, 70, 1, 70, 70, 1, 1, 1, 70, 1, 70, 1, 70, 70, 70, 1, 1, 1, 70, 70, 1, 70, 70, 70, 1, 70, 70, 1, 70, 1, 1, 1, 70, 70, 1, 70, 70, 70, 70, 2}, {1, 70, 1, 1, 1, 70, 1, 1, 70, 70, 1, 1, 70, 70, 1, 1, 70, 70, 70, 70, 2, 1, 1, 70, 70, 1, 1, 70, 70, 70, 70, 1, 1, 70, 70, 1, 70, 1, 1, 70, 1, 70, 1, 1, 70, 1, 1, 1, 70, 1, 70, 1, 70, 70, 70}, {1, 1, 1, 70, 1, 1, 1, 70, 1, 70, 1, 70, 1, 1, 70, 1, 1, 1, 1, 2, 70, 70, 70, 1, 1, 70, 70, 1, 70, 1, 70, 1, 70, 1, 1, 70, 70, 70, 70, 1, 1, 70, 1, 70, 1, 1, 1, 1, 70, 70, 70, 70, 70, 1, 1}, {1, 1, 70, 2, 1, 70, 1, 1, 1, 70, 70, 70, 1, 1, 70, 70, 70, 70, 70, 70, 1, 1, 1, 1, 1, 1, 1, 1, 70, 70, 70, 1, 1, 70, 70, 1, 1, 70, 70, 70, 1, 1, 1, 70, 1, 70, 1, 1, 1, 1, 70, 70, 1, 1, 70}, {70, 1, 1, 1, 1, 70, 1, 1, 70, 1, 1, 1, 1, 2, 70, 70, 1, 70, 1, 1, 1, 1, 1, 70, 70, 70, 1, 1, 70, 1, 70, 70, 70, 70, 1, 70, 1, 1, 70, 1, 70, 70, 70, 70, 70, 1, 70, 70, 1, 1, 1, 1, 70, 1, 70}, {1, 1, 70, 1, 1, 1, 1, 70, 70, 1, 1, 1, 1, 70, 1, 1, 1, 1, 1, 70, 2, 70, 70, 1, 1, 70, 1, 1, 70, 70, 1, 1, 1, 70, 1, 1, 1, 70, 1, 70, 70, 1, 70, 70, 1, 1, 1, 1, 70, 1, 1, 1, 70, 70, 70}, {1, 70, 1, 1, 1, 70, 70, 70, 1, 70, 70, 1, 70, 1, 70, 70, 1, 70, 1, 70, 70, 1, 70, 1, 70, 70, 1, 70, 1, 1, 70, 1, 70, 70, 70, 70, 70, 1, 70, 1, 1, 1, 1, 2, 1, 1, 1, 70, 70, 70, 1, 1, 1, 1, 1}, {70, 1, 70, 70, 1, 70, 1, 1, 1, 70, 1, 70, 70, 70, 1, 1, 70, 1, 1, 70, 1, 1, 70, 70, 1, 1, 70, 1, 70, 70, 70, 1, 1, 1, 70, 70, 70, 70, 1, 70, 1, 1, 70, 70, 70, 1, 70, 2, 70, 1, 70, 70, 1, 70, 70}, {1, 70, 1, 70, 70, 1, 70, 1, 1, 1, 70, 1, 1, 70, 1, 1, 1, 70, 70, 70, 70, 70, 70, 1, 1, 1, 1, 1, 70, 70, 70, 1, 70, 70, 1, 1, 1, 70, 1, 70, 1, 70, 1, 70, 70, 1, 2, 70, 70, 1, 1, 1, 1, 70, 1}, {70, 1, 1, 70, 70, 1, 70, 1, 1, 1, 1, 70, 1, 1, 70, 1, 70, 1, 70, 1, 70, 1, 1, 70, 70, 1, 1, 1, 1, 70, 2, 1, 1, 70, 70, 70, 1, 1, 70, 1, 1, 1, 70, 70, 1, 70, 70, 70, 1, 1, 1, 70, 1, 1, 70}, {70, 1, 70, 1, 1, 70, 1, 70, 70, 70, 70, 70, 1, 70, 70, 70, 1, 70, 1, 1, 1, 1, 70, 70, 1, 1, 1, 1, 70, 1, 1, 70, 70, 2, 1, 70, 1, 70, 1, 70, 70, 70, 70, 70, 1, 1, 70, 1, 1, 1, 70, 70, 1, 70, 1}, {1, 1, 1, 70, 70, 70, 70, 1, 70, 1, 1, 1, 1, 70, 1, 1, 1, 1, 70, 70, 1, 70, 1, 1, 70, 70, 1, 1, 1, 1, 70, 1, 70, 70, 1, 2, 70, 70, 70, 70, 1, 70, 70, 1, 70, 70, 70, 1, 70, 1, 1, 70, 1, 70, 1}, {70, 1, 70, 1, 70, 1, 1, 70, 1, 70, 70, 1, 70, 1, 70, 1, 70, 70, 70, 70, 1, 1, 70, 1, 1, 70, 2, 1, 70, 1, 70, 70, 70, 1, 70, 1, 70, 70, 1, 1, 1, 70, 1, 70, 1, 70, 1, 70, 1, 1, 1, 70, 1, 1, 70}, {1, 1, 70, 70, 70, 70, 70, 70, 1, 70, 70, 1, 1, 1, 70, 1, 70, 1, 1, 70, 1, 70, 1, 1, 70, 70, 70, 1, 70, 70, 70, 1, 1, 70, 70, 70, 1, 1, 70, 70, 1, 70, 1, 1, 70, 70, 1, 1, 70, 70, 1, 2, 70, 70, 1}, {70, 1, 70, 70, 1, 70, 70, 70, 70, 70, 1, 70, 70, 1, 1, 70, 1, 1, 1, 70, 70, 70, 70, 2, 1, 1, 70, 70, 1, 1, 70, 70, 1, 1, 70, 1, 70, 1, 70, 1, 70, 1, 1, 70, 1, 70, 70, 70, 70, 1, 70, 1, 70, 70, 1}, {70, 1, 1, 1, 70, 70, 70, 70, 1, 70, 1, 70, 2, 70, 70, 70, 70, 1, 1, 70, 70, 70, 1, 70, 1, 1, 1, 1, 70, 70, 70, 70, 70, 70, 70, 70, 1, 1, 70, 70, 1, 1, 1, 1, 70, 70, 70, 1, 1, 70, 1, 70, 1, 70, 70}, {1, 70, 1, 1, 70, 1, 70, 70, 70, 1, 70, 1, 70, 1, 70, 1, 70, 1, 70, 1, 1, 70, 70, 70, 1, 70, 70, 1, 1, 70, 70, 70, 2, 70, 70, 70, 70, 1, 70, 1, 1, 1, 1, 1, 70, 1, 1, 1, 1, 70, 70, 70, 70, 70, 70}, {1, 70, 1, 1, 70, 1, 1, 70, 70, 1, 70, 1, 70, 1, 1, 1, 70, 70, 70, 1, 1, 1, 1, 1, 70, 70, 1, 70, 2, 1, 70, 70, 70, 70, 1, 1, 70, 70, 70, 70, 70, 1, 70, 70, 1, 1, 1, 1, 70, 70, 70, 1, 1, 70, 1}, {70, 1, 1, 1, 70, 70, 1, 1, 1, 70, 1, 70, 1, 1, 70, 70, 70, 70, 70, 1, 1, 70, 1, 1, 1, 1, 70, 1, 70, 1, 70, 2, 70, 70, 1, 70, 70, 70, 1, 70, 70, 70, 1, 1, 1, 70, 1, 1, 1, 1, 1, 70, 70, 70, 70}, {1, 1, 70, 1, 1, 70, 70, 1, 70, 1, 1, 1, 70, 70, 70, 70, 70, 1, 1, 70, 70, 1, 70, 1, 1, 1, 70, 1, 70, 1, 70, 70, 70, 70, 1, 1, 70, 70, 70, 70, 70, 1, 70, 1, 1, 1, 1, 1, 1, 2, 70, 70, 1, 70, 1}, {70, 1, 70, 1, 70, 1, 1, 1, 1, 1, 70, 70, 70, 1, 70, 70, 70, 1, 70, 1, 70, 70, 1, 1, 70, 70, 70, 1, 1, 1, 1, 1, 70, 1, 70, 1, 70, 1, 1, 70, 70, 1, 2, 1, 1, 70, 1, 1, 70, 1, 70, 70, 70, 70, 70}, {1, 70, 1, 1, 70, 1, 1, 1, 1, 1, 70, 1, 70, 1, 1, 70, 1, 70, 1, 70, 1, 70, 1, 70, 1, 70, 1, 1, 1, 70, 1, 1, 70, 2, 1, 70, 70, 70, 70, 70, 1, 70, 70, 1, 70, 70, 70, 1, 70, 1, 1, 70, 1, 70, 70}, {70, 1, 70, 70, 70, 70, 1, 70, 1, 1, 70, 2, 1, 70, 1, 70, 1, 1, 70, 1, 1, 70, 70, 1, 1, 70, 70, 70, 70, 70, 1, 1, 70, 70, 70, 1, 70, 70, 1, 1, 70, 1, 70, 1, 1, 1, 1, 70, 70, 1, 70, 1, 70, 1, 70}, {70, 1, 70, 70, 2, 70, 1, 1, 1, 70, 1, 70, 1, 1, 70, 1, 1, 70, 70, 70, 70, 70, 70, 70, 1, 1, 1, 70, 1, 70, 70, 1, 1, 70, 1, 70, 70, 1, 70, 70, 70, 70, 1, 1, 1, 1, 70, 70, 1, 1, 70, 1, 1, 70, 70}, {70, 70, 1, 70, 70, 70, 70, 1, 70, 70, 1, 70, 1, 70, 70, 70, 1, 70, 1, 1, 70, 1, 1, 70, 1, 70, 1, 70, 70, 70, 1, 70, 70, 70, 70, 1, 1, 70, 70, 1, 1, 1, 2, 70, 70, 70, 70, 70, 70, 1, 70, 70, 70, 70, 70}, {1, 1, 1, 70, 70, 1, 1, 1, 1, 1, 70, 70, 1, 70, 1, 1, 1, 70, 1, 70, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 70, 1, 70, 1, 70, 2, 1, 1, 1, 1, 1, 70, 70, 1, 1, 1, 70, 70, 70, 70, 1, 70, 1, 1, 70}, {1, 1, 1, 1, 70, 1, 1, 1, 1, 70, 1, 2, 70, 70, 70, 1, 70, 1, 1, 70, 70, 1, 70, 1, 1, 70, 70, 70, 70, 70, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 70, 70, 70, 1, 1, 1, 1, 70, 70, 1, 1, 70}, {1, 70, 1, 1, 70, 70, 1, 70, 1, 70, 1, 70, 70, 1, 1, 1, 70, 1, 70, 70, 70, 70, 1, 1, 70, 1, 1, 1, 70, 1, 1, 70, 1, 1, 70, 70, 1, 70, 1, 1, 70, 70, 1, 1, 70, 1, 1, 70, 1, 1, 70, 70, 1, 2, 70}, {1, 70, 2, 70, 1, 70, 1, 1, 1, 70, 70, 1, 70, 70, 70, 1, 70, 70, 1, 70, 70, 1, 1, 70, 1, 70, 1, 1, 70, 70, 1, 70, 1, 70, 1, 70, 70, 1, 70, 70, 70, 70, 1, 1, 70, 70, 70, 70, 1, 70, 70, 70, 1, 1, 1}, {1, 1, 1, 70, 70, 70, 70, 70, 70, 70, 1, 70, 1, 1, 1, 70, 1, 1, 70, 70, 70, 70, 70, 70, 70, 1, 70, 70, 70, 70, 1, 70, 1, 70, 1, 70, 1, 1, 1, 70, 2, 70, 70, 1, 70, 1, 1, 1, 1, 70, 70, 1, 70, 70, 70}, {70, 1, 1, 70, 1, 1, 70, 70, 1, 70, 1, 70, 70, 70, 1, 70, 70, 2, 1, 1, 70, 70, 1, 70, 70, 70, 1, 1, 70, 70, 1, 1, 70, 1, 70, 1, 1, 70, 1, 1, 1, 70, 1, 1, 70, 70, 1, 1, 1, 70, 1, 70, 70, 1, 70}, {70, 70, 1, 70, 70, 70, 70, 70, 70, 1, 70, 70, 70, 70, 1, 70, 70, 70, 1, 1, 1, 70, 1, 70, 1, 1, 70, 70, 1, 2, 1, 70, 70, 1, 1, 70, 1, 70, 1, 1, 70, 1, 70, 70, 1, 70, 70, 70, 70, 1, 70, 70, 70, 1, 70}, {1, 1, 70, 70, 1, 1, 1, 1, 70, 1, 1, 70, 1, 1, 1, 70, 1, 1, 70, 70, 1, 2, 70, 1, 1, 1, 1, 1, 70, 1, 70, 1, 1, 1, 70, 70, 70, 70, 1, 1, 1, 1, 70, 70, 70, 70, 70, 1, 70, 70, 1, 1, 1, 70, 1}, {70, 70, 70, 70, 70, 1, 1, 1, 70, 1, 1, 1, 70, 1, 70, 1, 70, 70, 1, 70, 1, 1, 70, 70, 70, 70, 1, 70, 1, 1, 1, 1, 70, 70, 70, 1, 70, 1, 1, 1, 70, 1, 70, 1, 70, 1, 1, 2, 1, 1, 70, 70, 70, 1, 1}, {70, 1, 1, 70, 1, 1, 70, 1, 70, 70, 70, 1, 2, 70, 70, 1, 70, 70, 70, 1, 70, 1, 1, 70, 1, 70, 70, 70, 1, 70, 1, 70, 1, 1, 1, 70, 1, 70, 1, 70, 1, 1, 1, 1, 1, 1, 1, 1, 70, 1, 1, 1, 1, 70, 70}, {1, 70, 1, 70, 1, 70, 1, 70, 1, 70, 1, 70, 1, 1, 1, 70, 70, 70, 70, 2, 70, 70, 70, 1, 70, 1, 70, 70, 1, 70, 70, 1, 1, 1, 1, 70, 70, 70, 70, 70, 70, 70, 1, 70, 70, 70, 70, 70, 70, 1, 70, 1, 70, 1, 70}};
        int target = 112;
        int expected = 2;
        Assertions.assertEquals(expected, solution1981.minimizeTheDifference(mat, target));
    }
}
